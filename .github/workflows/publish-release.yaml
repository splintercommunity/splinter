name: Publish Release

on:
  push:
    tags:
      - '*'

env:
  slack-channel: 'alerts'

jobs:

  unit_test_splinter:
    if: >-
      github.repository_owner == 'splintercommunity'
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Display envvars
        run: env

      - name: Install Just
        run: curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | sudo bash -s -- --to /usr/local/bin

      - name: Run tests
        run: just ci-test

  start_cluster:
    if: github.repository == 'splintercommunity/splinter'
    name: Start buildx cluster
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start_buildx_cluster.outputs.label }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - uses: actions/checkout@v2

      - name: Start EC2 runner
        id: start_buildx_cluster
        uses: ./.github/actions/ec2-runners
        with:
          action: start
          amd_ami_id: ${{ secrets.AMD_AMI_ID }}
          amd_instance_type: ${{ secrets.AMD_INSTANCE_TYPE }}
          arm_ami_id: ${{ secrets.ARM_AMI_ID }}
          arm_instance_type: ${{ secrets.ARM_INSTANCE_TYPE }}
          gh_personal_access_token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          security_group_id: ${{ secrets.SECURITY_GROUP_ID }}
          subnet: ${{ secrets.SUBNET }}

      - name: Test output
        run: echo ${{ steps.start_buildx_cluster.outputs.label }}

      - name: Notify Slack of Failure
        if: cancelled() || failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,job
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  publish_docker:
    needs:
      - start_cluster
      - unit_test_splinter
    if: >-
      github.repository_owner == 'splintercommunity'
    runs-on: ${{ needs.start_cluster.outputs.label }}
    steps:
      - name: Display envvars
        run: env

      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Publish release to dockerhub
        run: |
          git fetch --tags --force
          ./ci/publish-docker
        env:
          VERSION: AUTO_STRICT
          CARGO_TERM_COLOR: always
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}

      - name: Notify Slack of Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,job
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  stop_cluster:
    name: Stop buildx cluster
    needs:
      - start_cluster
      - publish_docker
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'splintercommunity/splinter' && always() }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - uses: actions/checkout@v2

      - name: Destroy cluster
        uses: ./.github/actions/ec2-runners
        with:
          action: stop
          label: ${{ needs.start_cluster.outputs.label }}

      - name: Notify Slack of Failure
        if: cancelled() || failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,job
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  publish_to_crates:
    needs: unit_test_splinter
    if: >-
      github.repository_owner == 'splintercommunity'
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Display envvars
        run: env

      - name: Publish release to crates
        run: |
          git fetch --tags --force
          CARGO_TOKEN=${{ secrets.CARGO_TOKEN }} ./ci/publish-crates

      - name: Notify Slack of Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,job
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
